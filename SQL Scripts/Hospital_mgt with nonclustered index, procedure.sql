CREATE DATABASE HOSPITAL_MANAGEMENT

USE HOSPITAL_MANAGEMENT

/*SQL Script to create table structure for Hospital Admin*/
CREATE TABLE HOSPITAL_ADMIN
(
    ADMIN_ID INT NOT NULL IDENTITY(100,1),
    ADMIN_NAME VARCHAR(30) NOT NULL,
    CONTACT_NO BIGINT NOT NULL,
    EMAIL_ID VARCHAR(50) NOT NULL UNIQUE,
	CONSTRAINT HOSPITAL_ADMIN_PK PRIMARY KEY (ADMIN_ID)
);

/*Insert Scripts for HOSPITAL_ADMIN*/

INSERT INTO HOSPITAL_ADMIN VALUES('Brandy Hagenes', 1978253236, 'brandy.hagenes@yahoo.com');
INSERT INTO HOSPITAL_ADMIN VALUES('Geraldo Schumm', 9498602713, 'geraldo.schumm@yahoo.com');
INSERT INTO HOSPITAL_ADMIN VALUES('Jenice Satterfield', 6052122437, 'jenice.satterfield@yahoo.com');
INSERT INTO HOSPITAL_ADMIN VALUES('Cecille Aufderhar', 5679733830, 'cecille.aufderhar@yahoo.com');
INSERT INTO HOSPITAL_ADMIN VALUES('Cameron Schinner', 3192189003, 'cameron.schinner@yahoo.com');
INSERT INTO HOSPITAL_ADMIN VALUES('Daron Johns', 5013366101, 'daron.johns@yahoo.com');

/*PATIENT TABLE STRUCTURE*/

CREATE TABLE PATIENT
(
    PATIENT_ID INT IDENTITY(5000,1) CONSTRAINT PATIENT_PK  PRIMARY KEY, -- primary key column
    FIRST_NAME VARCHAR(30) NOT NULL,
    MIDDLE_NAME VARCHAR(20),
    LAST_NAME VARCHAR(30) NOT NULL,
    DOB DATE NOT NULL ,
    WEIGHT INT CHECK(WEIGHT > 0), -- in pounds (lbs)
    HEIGHT INT CHECK(HEIGHT > 0), -- in centimeters (cm)
    GENDER VARCHAR(2) NOT NULL CHECK(gender IN ('M', 'F', 'NA')), -- assigned at birth
    STREET_NO INT NOT NULL,
    STREET_NAME VARCHAR(100) NOT NULL,
    CITY VARCHAR(30) NOT NULL,
    STATE_NAME CHAR(2) NOT NULL, -- Two letter abbreviation for stateName
    ZIP INT NOT NULL,
    PHONE_NO BIGINT  NOT NULL,
    EMAIL_ID VARCHAR(50) NULL,
);

/*INSERT SCRIPT FOR PATIENT*/

INSERT INTO PATIENT VALUES( 'Onita', 'Murray', 'Langworth', '1973-07-04', 228, 127, 'F', 408, 'Patrick Neck', 'Greenshire', 'OH', 44485, 8168483635, 'onita.langworth@yahoo.com');
INSERT INTO PATIENT VALUES( 'Jeffry', 'Cummings', 'Boyer', '06-Feb-1980', 133, 162, 'F', 697, 'Barton Street', 'Domitilachester', 'GA', 31042, 1913425048, 'jeffry.boyer@yahoo.com');
INSERT INTO PATIENT VALUES( 'Domenic', 'Schmidt', 'Bednar', '29-Aug-1964', 330, 126, 'M', 475, 'Bayer Burg', 'South Luannechester', 'DE', 19931, 5712127297, 'domenic.bednar@yahoo.com');
INSERT INTO PATIENT VALUES( 'Darryl', 'Josh', 'Reilly', '18-Sep-1996', 144, 167, 'M', 884, 'Min Station', 'Schneidertown', 'UT', 84523, 4349719735, 'darryl.reilly@yahoo.com');
INSERT INTO PATIENT VALUES( 'Taryn', 'Rempel', 'Breitenberg', '25-Sep-1993', 167, 185, 'M', 554, 'Tammera Parkways', 'West Maliaport', 'TX', 78594, 1312903684, 'taryn.breitenberg@yahoo.com');
INSERT INTO PATIENT VALUES( 'Danny', 'tyler', 'scott', '1993-07-05', 228, 127, 'M', 408, 'Patrick Neck', 'Greenshire', 'OH', 44485, 8168483635, 'danny.tyler@yahoo.com');

SELECT * FROM PATIENT



--PROCEDURE FOR DROPPING AND CREATING NONCLUSTERED INDEX FOR PATIENT
USE HOSPITAL_MANAGEMENT;
GO
IF EXISTS (SELECT NAME FROM SYS.INDEXES WHERE NAME ='IX_FULL_NAME')
	DROP INDEX IX_FULL_NAME ON dbo.PATIENT;
GO
CREATE NONCLUSTERED INDEX IX_FULL_NAME ON PATIENT (FIRST_NAME, MIDDLE_NAME, LAST_NAME ASC);
GO




/*DEPARTMENT*/

CREATE TABLE DEPARTMENT
(
    DEPT_ID INT NOT NULL IDENTITY(3000,1),
    DEPT_NAME VARCHAR(100) NOT NULL,
    ADMIN_ID INT NOT NULL,
    CONSTRAINT DEPARTMENT_PK PRIMARY KEY(DEPT_ID),
    CONSTRAINT DEPARTMENT_FK FOREIGN KEY (ADMIN_ID) REFERENCES HOSPITAL_ADMIN(ADMIN_ID)
);
--NONCLUSTERED INDEX FOR DEPT
CREATE NONCLUSTERED INDEX IX_DEPTNAME ON DEPARTMENT (DEPT_NAME ASC);

--DROP TABLE DEPARTMENT

/*INSERT SCRIPT FOR DEPARTMENT*/
INSERT INTO DEPARTMENT VALUES('General Internal Medicine',100);
INSERT INTO DEPARTMENT VALUES('Cardiology',100);
INSERT INTO DEPARTMENT VALUES('Dermatology',100);
INSERT INTO DEPARTMENT VALUES('Endocrinology',100);
INSERT INTO DEPARTMENT VALUES('Gastroenterology',100);
INSERT INTO DEPARTMENT VALUES('Oncology',100);

SELECT * FROM DEPARTMENT

/*DOCTOR */
CREATE TABLE DOCTOR
(
    DOCTOR_ID INT NOT NULL IDENTITY(4000,1),
    DEPT_ID INT NOT NULL,
    FIRST_NAME VARCHAR(30) NOT NULL,
    MIDDLE_NAME VARCHAR(30),
    LAST_NAME VARCHAR(30) NOT NULL,
    PHONE_NO VARCHAR(10) NOT NULL,
    EMAIL_ID VARCHAR(50) UNIQUE NOT NULL,
    QUALIFICATION VARCHAR(30) NOT NULL,
    YEARS_OF_WORKING INT NOT NULL,
    OFFICE_ROOM VARCHAR(4) NOT NULL,
    CONSTRAINT DOCTOR_PK PRIMARY KEY(DOCTOR_ID),
    CONSTRAINT DOCTOR_FK FOREIGN KEY (DEPT_ID) REFERENCES DEPARTMENT(DEPT_ID)
);

--NONCLUSTERED INDEX FOR DOCTOR
CREATE NONCLUSTERED INDEX IX_DOCTOR_NAME ON DOCTOR (FIRST_NAME ASC);


/*INSERT SCRIPT FOR DOCTOR*/
INSERT INTO DOCTOR VALUES(3002, 'Lupe', 'Anneliese', 'Waelchi', 1304816124, 'lupe.waelchi@yahoo.com', 'Junior', 3, 1);
INSERT INTO DOCTOR VALUES(3003, 'Florentina', 'Botsford', 'Homenick', 9175022721, 'florentina.homenick@yahoo.com', 'Junior', 2, 1);
INSERT INTO DOCTOR VALUES(3004,'Temple', 'Murphy', 'Wisoky', 7243015231, 'temple.wisoky@yahoo.com', 'Senior',7,39);
INSERT INTO DOCTOR VALUES(3005, 'Brendan', 'Shanahan', 'McDermott', 5162271847, 'brendan.mcdermott@yahoo.com', 'Senior',10, 23);
INSERT INTO DOCTOR VALUES(3000, 'Nidia', 'Lynch', 'Schmeler', 3056827291, 'nidia.schmeler@yahoo.com', 'Junior',2,38);
INSERT INTO DOCTOR VALUES(3001, 'Leonard', 'Deann', 'Balistreri', 6199136070, 'leonard.balistreri@yahoo.com','Junior', 4, 32);

SELECT * FROM DOCTOR

/*DOCTOR SCHEDULE*/
CREATE TABLE DOCTOR_SCHEDULE
(
    DOCSCHEDULE_ID INT NOT NULL IDENTITY(7000,1),
    SCHEDULE_DATE DATETIME,
    SCHEDULE_STATUS VARCHAR(20) DEFAULT 'Available' CHECK(SCHEDULE_STATUS IN ('Available','Cancelled')),
    DOCTOR_ID INT NOT NULL,
    CONSTRAINT DOCTOR_SCHEDULE_PK PRIMARY KEY(DOCSCHEDULE_ID),
    CONSTRAINT DOCTOR_ID FOREIGN KEY (DOCTOR_ID) REFERENCES DOCTOR(DOCTOR_ID)
);

/*INSERT SCRIPT FOR DOCTOR SCHEDULE*/
INSERT INTO DOCTOR_SCHEDULE VALUES('2021-10-15 04:05:00', 'Cancelled',4000);
INSERT INTO DOCTOR_SCHEDULE VALUES('2021-10-16 07:30:00', 'Available',4001);
INSERT INTO DOCTOR_SCHEDULE VALUES('2021-10-20 18:54:26', 'Available',4002);
INSERT INTO DOCTOR_SCHEDULE VALUES('2021-10-23 12:05:00', 'Cancelled',4002);
INSERT INTO DOCTOR_SCHEDULE VALUES('2021-10-23 17:10:00', 'Available',4003);
INSERT INTO DOCTOR_SCHEDULE VALUES('2021-10-28 08:30:00', 'Available',4004);
INSERT INTO DOCTOR_SCHEDULE VALUES('2021-10-29 09:00:00', 'Cancelled',4005);
INSERT INTO DOCTOR_SCHEDULE VALUES('2021-11-01 11:15:00', 'Cancelled',4000);
INSERT INTO DOCTOR_SCHEDULE VALUES('2021-11-05 14:35:00', 'Available',4002);
INSERT INTO DOCTOR_SCHEDULE VALUES('2021-11-18 16:40:00', 'Available',4002);
INSERT INTO DOCTOR_SCHEDULE VALUES('2021-11-22 12:00:00', 'Available',4001);

SELECT * FROM DOCTOR_SCHEDULE

-- Enter the doctor's first and last name to get the doctor's schedule appointment
USE HOSPITAL_MANAGEMENT
GO
CREATE PROCEDURE GetDOCTORSHEDULE @FirstName VARCHAR(30), @Lastname VARCHAR(30) AS
BEGIN
    SELECT d.DOCTOR_ID, d.FIRST_NAME, d.LAST_NAME, ds.DOCSCHEDULE_ID, ds.SCHEDULE_DATE, ds.SCHEDULE_STATUS
    FROM Doctor d JOIN DOCTOR_SCHEDULE ds ON d.DOCTOR_ID = ds.DOCTOR_ID
    WHERE FIRST_NAME = @FirstName AND LAST_NAME = @Lastname
END;

EXEC GetDOCTORSHEDULE 'Temple','Wisoky';

-- Enter the department and the date, see all the available doctors.
GO
CREATE PROCEDURE GetDOCTORAVAILABLE @SCHEDULE_DATE VARCHAR(30), @DEPARTMENT_NAME VARCHAR(30) AS
BEGIN
    SELECT d.DOCTOR_ID, d.FIRST_NAME,d.LAST_NAME, ds.DOCSCHEDULE_ID, ds.SCHEDULE_DATE, ds.SCHEDULE_STATUS,dp.DEPT_ID,dp.DEPT_NAME
    FROM DOCTOR d LEFT JOIN DOCTOR_SCHEDULE ds ON d.DOCTOR_ID = ds.DOCTOR_ID
                  LEFT JOIN DEPARTMENT dp ON d.DEPT_ID = dp.DEPT_ID
    WHERE ds.SCHEDULE_DATE between CONVERT(DATETIME,'2021-10-20',0) AND DATEADD(dd,1,'2021-10-20')
    AND dp.DEPT_NAME = @DEPARTMENT_NAME
END;

EXEC GetDOCTORAVAILABLE '2021-10-20','Gastroenterology';

/*SQL Script to create table structure for Lab*/
CREATE TABLE LAB
(
    LAB_ID INT NOT NULL IDENTITY(8000,1),
    LAB_NAME VARCHAR(30) NOT NULL,
	LAB_TYPE VARCHAR(30) NOT NULL,
    LAB_DESCRIPTION VARCHAR(50) NOT NULL,
	ADMIN_ID INT NOT NULL,
    CONSTRAINT LAB_PK PRIMARY KEY (LAB_ID),
	CONSTRAINT LAB_FK FOREIGN KEY (ADMIN_ID) REFERENCES HOSPITAL_ADMIN(ADMIN_ID)
);

/*INSERT SCRIPT FOR LAB*/
INSERT INTO LAB VALUES ('CBC','Blood','Blood Reports lab','101')

SELECT * FROM LAB

/*BILLING*/
Create table BILLING
(
	BILLING_ID int not null identity (9000,1),
	BILLING_DATE date not null,
	PATIENT_ID int not null ,
	DOCTOR_FEES int not null,
	ROOM_CHARGES int not null,
	Constraint Billing_PK PRIMARY KEY (BILLING_ID),
	Constraint Billing_FK FOREIGN KEY (PATIENT_ID) REFERENCES Patient (PATIENT_ID)

);


/*APPOINTMENT SCHEDULING*/

Create table APPOINTMENT_SCHEDULING 
(
	APPOINTMENT_ID int not null identity(1000,1),
	DOCSCHEDULE_ID int not null ,
	PATIENT_ID int not null ,
	ADMIN_ID int not null ,
	APPOINTMENT_DATE datetime not null,
	START_TIME TIME NOT NULL,
	END_TIME TIME NOT NULL,
	APPOINTMENT_STATUS varchar(30),
	APPOINTMENT_REASON VARCHAR(50),
	PATIENT_TYPE VARCHAR(1)
	Constraint Appointment_Scheduling_PK PRIMARY KEY (APPOINTMENT_ID),
	Constraint Appointment_Scheduling_FK1 FOREIGN KEY (DOCSCHEDULE_ID) REFERENCES Doctor_Schedule(DOCSCHEDULE_ID),
	Constraint Appointment_Scheduling_FK2 FOREIGN KEY (PATIENT_ID) REFERENCES Patient (PATIENT_ID),
	Constraint Appointment_Scheduling_FK3 FOREIGN KEY (ADMIN_ID) REFERENCES Hospital_Admin (ADMIN_ID)
);

SELECT * FROM APPOINTMENT_SCHEDULING WHERE APPOINTMENT_DATE = '2021-10-16 07:30:00.000'

SELECT * FROM DOCTOR_SCHEDULE


Insert into APPOINTMENT_SCHEDULING Values ('7001','5001','100','2021-10-16 07:30:00.000','07:30:00','08:00:00','Booked','TEST', 'I');
Insert into APPOINTMENT_SCHEDULING Values ('7002','5002','100','2021-10-20 18:54:26.000','18:54:26','19:00:00','Booked','TEST','O');
Insert into APPOINTMENT_SCHEDULING Values ('7004','5003','100','2021-10-23 17:10:00.000','17:10:00','18:00:00','Booked','TEST', 'I');


/*RECORD*/

CREATE TABLE RECORD(    RECORD_ID INT PRIMARY KEY NOT NULL IDENTITY(10001,1),    DOCTOR_ID INT FOREIGN KEY (DOCTOR_ID) REFERENCES DOCTOR(DOCTOR_ID),    PATIENT_ID INT FOREIGN KEY (PATIENT_ID) REFERENCES PATIENT(PATIENT_ID),    ADMIT_DATE DATE,    DISCHARGEDATE DATE,    BILLING_ID INT NULL FOREIGN KEY (BILLING_ID) REFERENCES BILLING(BILLING_ID),    PATIENT_TYPE VARCHAR(1) CONSTRAINT CHK_SUBJECT CHECK (PATIENT_TYPE IN ('I', 'O')),)

SELECT * FROM RECORD

INSERT INTO RECORD VALUES(4001, 5001, '2021-10-16 07:30:00.000', '2021-10-20 07:30:00.000',NULL, 'I');


/**/
CREATE TABLE PAYMENT(	PAYMENT_ID INT NOT NULL IDENTITY (11001,1),	PAYMENT_METHOD VARCHAR(30) NOT NULL,	PAYMENT_DATE_TIME DATETIME NOT NULL,	BILLING_ID INT NOT NULL,	CONSTRAINT PAYMENT_PK PRIMARY KEY (PAYMENT_ID),	CONSTRAINT PAYMENT_FK FOREIGN KEY (BILLING_ID) REFERENCES BILLING (BILLING_ID)	);



/*UDF FOR CALCULATING AGE*/
CREATE FUNCTION CALCULATED_AGE(@DateOfBirth AS DATETIME)RETURNS INTASBEGINDECLARE @Years AS INTDECLARE @BirthdayDate AS DATETIMEDECLARE @Age AS INT--Calculate difference in yearsSET @Years = DATEDIFF(YY,@DateOfBirth,GETDATE())--Add years to DateOfBirthSET @BirthdayDate = DATEADD(YY,@Years,@DateOfBirth)--Subtract a year if birthday is after todaySET @Age = @Years -CASEWHEN @BirthdayDate>GETDATE() THEN 1ELSE 0END--Return the resultRETURN @AgeENDselect * from patient/* UDF - CAlculate Age */alter table PATIENT ADD Age as dbo.CALCULATED_AGE(patient.DOB)
